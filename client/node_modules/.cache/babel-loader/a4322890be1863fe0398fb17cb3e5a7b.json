{"ast":null,"code":"var _jsxFileName = \"/Users/Keenan/Desktop/Lambda-Projects/Sprint-11/web-sprint-challenge-advanced-web-applications/client/src/components/FeedbackForm.js\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nexport const ContactForm = () => {\n  const initialState = {\n    name: \"\",\n    email: \"\",\n    comment: \"\"\n  };\n  const [formState, setFormState] = useState(initialState);\n  const [comments, setComments] = useState([]);\n\n  const handleChange = e => {\n    setFormState({ ...formState,\n      [e.target.name]: e.target.value\n    });\n    console.log(formState);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(\"Feedback submitted!\");\n    axios.post(\"https://reqres.in/api/comments\", formState).then(res => {\n      setComments([...comments, res.data]);\n    }).catch(err => {\n      console.log({\n        err\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"Contact us!\"), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, \"Name: \"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"name\",\n    name: \"name\",\n    value: formState.name,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, \"Email: \"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"email\",\n    name: \"email\",\n    value: formState.email,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"comment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, \"Comment: \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"textarea\",\n    id: \"comment\",\n    name: \"comment\",\n    value: formState.comment,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, \"Leave feedback\")), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, \"Feedback:\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, comments.forEach(comment => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 28\n      }\n    }, \"Test\");\n  })));\n};","map":{"version":3,"sources":["/Users/Keenan/Desktop/Lambda-Projects/Sprint-11/web-sprint-challenge-advanced-web-applications/client/src/components/FeedbackForm.js"],"names":["React","useState","axios","ContactForm","initialState","name","email","comment","formState","setFormState","comments","setComments","handleChange","e","target","value","console","log","handleSubmit","preventDefault","post","then","res","data","catch","err","forEach"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nexport const ContactForm = () => {\n    const initialState = {\n        name: \"\",\n        email: \"\",\n        comment: \"\"\n    };\n    \n    const [formState, setFormState] = useState(initialState);\n    const [comments, setComments] = useState([]);\n\n    const handleChange = e => {\n        setFormState({\n            ...formState,\n            [e.target.name]: e.target.value\n        });\n        console.log(formState);\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        console.log(\"Feedback submitted!\")\n        axios.post(\"https://reqres.in/api/comments\", formState)\n            .then(res => {\n                setComments([...comments, res.data])\n            })\n            .catch(err => {\n                console.log({err})\n            });\n    }\n\n    return (\n        <>\n            <h2>Contact us!</h2>\n            <form>\n                <label htmlFor=\"name\">Name: </label>\n                <input\n                    id=\"name\"\n                    name=\"name\"\n                    value={formState.name}\n                    onChange={handleChange}\n                />\n                <label htmlFor=\"email\">Email: </label>\n                <input\n                    id=\"email\"\n                    name=\"email\"\n                    value={formState.email}\n                    onChange={handleChange}\n                />\n                <label htmlFor=\"comment\">Comment: </label>\n                <input\n                    type=\"textarea\"\n                    id=\"comment\"\n                    name=\"comment\"\n                    value={formState.comment}\n                    onChange={handleChange}\n                />\n                <button onClick={handleSubmit}>Leave feedback</button>\n            </form>\n            <h2>Feedback:</h2>\n            <div>\n                {comments.forEach(comment => {\n                    return <div>Test</div>;\n                })}\n            </div>\n        </>\n    );\n}"]},"metadata":{},"sourceType":"module"}